------------Generated by ChatGPT------------

Personal AI Stock Agent - Architecture

User Input (Natural language)
        │
        ▼
┌────────────────────────────┐
│     app.py (CLI entry)     │
└────────────────────────────┘
        │
        ▼
Parse user query for:
- Stock symbol (e.g., AAPL, META)
- Summary duration (e.g., 3 months)
        │
        ▼
┌─────────────────────────────────────┐
│   Async coordinator: get_stock_info │
│   - Calls price and summary tools   │
└─────────────────────────────────────┘
        │
        ├──────────────┬────────────────────┐
        ▼              ▼                    ▼
┌────────────┐  ┌────────────────┐    (Future: Add more tools)
│ get_current│  │ get_summary    │
│ _price     │  │ _tool (Twelve  │
│ (Twelve    │  │ Data API)      │
│ Data API)  │  └────────────────┘
└────────────┘
        │              │
        └────┬─────┬───┘
             ▼     ▼
      Current Price & Summary
             │
             ▼
┌────────────────────────────────────┐
│ Format using template (format_prompt.txt)
│ - Injects info into LLM prompt
└────────────────────────────────────┘
             │
             ▼
┌────────────────────────────┐
│    LLM (Ollama - LLaMA 3)  │
└────────────────────────────┘
             │
             ▼
┌────────────────────────────┐
│       Final Output         │
└────────────────────────────┘
             │
             ▼
      Prints to terminal


| File                        | Purpose                                         |
| --------------------------- | ----------------------------------------------- |
| `app.py`                    | Main CLI loop for user input and coordination   |
| `agent/stock_agent.py`      | Calls the tools and LLM, handles orchestration  |
| `tools/price_tool.py`       | Fetches real-time stock price using Twelve Data |
| `tools/summary_tool.py`     | Fetches historical summary using Twelve Data    |
| `prompts/format_prompt.txt` | Template for formatting prompt for LLM          |
| `.env`                      | Stores API keys like `TWELVE_DATA_API_KEY`      |
| `logging`                   | Logs all steps and errors at INFO/DEBUG level   |
